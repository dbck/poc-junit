name: Build Package

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!release'  # excludes release branch

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: OSSRH_USERNAME # env variable for username in deploy
        server-password: OSSRH_PASSWORD # env variable for token in deploy
        gpg-private-key: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: OSSRH_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Prepare version
      run: |
        export CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
        echo "CURRENT_BRANCH=${CURRENT_BRANCH}" >> $GITHUB_ENV
        export REVISION_BRANCH=$([[ ${CURRENT_BRANCH} != "release" && ${CURRENT_BRANCH} != "main" ]] && echo "-${CURRENT_BRANCH}")
        echo "REVISION_BRANCH=${REVISION_BRANCH}" >> $GITHUB_ENV
        export REVISION_TYPE=$([[ ${CURRENT_BRANCH} != "release" ]] && echo "-SNAPSHOT")
        echo "REVISION_TYPE=${REVISION_TYPE}" >> $GITHUB_ENV

    - name: Build, test and deploy with maven
      run: mvn ${MAVEN_OPTIONS} -Dsha1="${REVISION_BRANCH}" -Dchangelist="${REVISION_TYPE}" deploy
      env:
        MAVEN_OPTIONS: --quiet --batch-mode --no-transfer-progress
        GITHUB_TOKEN: ${{ github.token }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        OSSRH_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}


    - name: Quality check with maven and sonar
      run: mvn ${MAVEN_OPTIONS} -Dsha1="${REVISION_BRANCH}" -Dchangelist="${REVISION_TYPE}" -Pquality verify # Test already run in previous step
      env:
        MAVEN_OPTIONS: --quiet --batch-mode --no-transfer-progress
        GITHUB_TOKEN: ${{ github.token }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
