# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Test Release Versions v3

on: push

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Prepare release versions
      run: |
        export "CURRENT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        export "REVISION_BRANCH=$([[ ${CURRENT_BRANCH} != \"main\" && ${CURRENT_BRANCH} != \"develop\" ]] && echo \"-${CURRENT_BRANCH}\")" >> $GITHUB_ENV
        export "REVISION_TYPE=$([[ ${CURRENT_BRANCH} != \"main\" ]] && echo \"-SNAPSHOT\")" >> $GITHUB_ENV
      
    - name: Build, test and deploy with maven
      run: |
        echo "CURRENT_BRANCH=${CURRENT_BRANCH}"
        echo "REVISION_BRANCH=${REVISION_BRANCH}"
        echo "REVISION_TYPE=${REVISION_TYPE}"
        # Build and deploy
        export RELEASE_VERSION="$(mvn help:evaluate -Dsha1="${REVISION_BRANCH}" -Dchangelist="${REVISION_TYPE}" -Dexpression=project.version -q -DforceStdout)"
        echo "RELEASE_VERSION=${RELEASE_VERSION}"
        # Increment revision of develop branch based on main revision value
        export NEXT_DEVELOPMENT_VERSION="$(mvn ${MVN_CLI_OPTIONS} build-helper:parse-version -DgenerateBackupPoms=false -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} help:evaluate -Dexpression=newVersion -q -DforceStdout)"
        echo "NEXT_DEVELOPMENT_VERSION type is ${NEXT_DEVELOPMENT_VERSION}"
      env:
        MVN_CLI_OPTIONS: --quiet --batch-mode --no-transfer-progress